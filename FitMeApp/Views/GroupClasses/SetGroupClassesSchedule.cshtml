@using System.Linq
@using System.Diagnostics.Eventing.Reader
@model FitMeApp.WEB.Contracts.ViewModels.SetCroupClassScheduleViewModel

<div class="container" style="text-align:center">
    <div class="row">
        <div class=" col-md-2">

        </div>
        <div class="col-md-8" style="text-align: center">
            <div class="card" style="margin: 20px">
                <form asp-controller="GroupClasses" asp-action="SetGroupClassesSchedule" method="post">
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="card-text small text-danger"></div>

                        <h4 class="card-title text-center">New group class appointment</h4>
                        <h5 class="card-title text-center">

                            @*Filling up the model properties, that the user doesn't choose on the page.*@
                            <input id="trainerId" type="hidden" asp-for="TrainerId" value="@Model.TrainerId"/>
                            <input type="hidden" asp-for="GymId" value="@Model.GymId"/>
                            <input type="hidden" asp-for="GymName" value="@Model.GymName"/>
                            @for (int i = 0; i < Model.GroupClasses.Count(); i++)
                            {
                                <input type="hidden" asp-for="@Model.GroupClasses[i].Id" value="@Model.GroupClasses[i].Id"/>
                                <input type="hidden" asp-for="@Model.GroupClasses[i].Name" value="@Model.GroupClasses[i].Name"/>
                            }
                            @for (int i = 0; i < Model.WorkDaysOfWeek.Count(); i++)
                            {
                                <input type="hidden" asp-for="@Model.WorkDaysOfWeek[i]" value="@Model.WorkDaysOfWeek[i]"/>
                            }

                            Gym: @Model.GymName
                        </h5>
                        <hr />
                        <div class="row">
                            <div class="col-md-4 card-text" style="text-align: right">
                                Group class
                            </div>
                            <div class="col-md-8">
                                <select class="form-select" aria-label="Default select example" id="groupClassSelect" asp-for="SelectedGroupClassId">
                                    @foreach (var groupClass in Model.GroupClasses)
                                    {
                                        <option value="@groupClass.Id">@groupClass.Name</option>
                                    }
                                </select>

                               
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-md-4 card-text" style="text-align: right">
                                Date
                            </div>
                            <div class="col-md-8">
                                @{
                                    string minDate = DateTime.Today.AddDays(1).Date.ToString("yyyy-MM-dd");
                                    string maxDate = DateTime.Today.AddDays(31).Date.ToString("yyyy-MM-dd");
                                    string selectedDate = Model.Dates != null ? Model.Dates.Min(x => x).ToString("yyyy-MM-dd") : minDate;
                                }
                                <input id="selectDate" type="date" asp-for="Dates" min="@minDate" max="@maxDate" value="@selectedDate" style="margin: 0px 0px 8px" />
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-md-4 card-text" style="text-align: right">
                                Time
                            </div>
                            <div class="col-md-8">
                                <select class="form-select form-select-sm" aria-label=".form-select-sm example" id="startTimeSelect" asp-for="StartTime">
                                    @if (Model.StartTime != null)
                                    {
                                        <option selected value="@Model.StartTime">@Model.StartTime</option>
                                    }
                                </select>
                                <div id="timeErrorMessage" class="card-text small text-danger"></div>
                                <span asp-validation-for="StartTime" class="card-text small"></span>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-md-4 card-text" style="text-align: right">
                                Training duration
                            </div>
                            <div class="col-md-8">
                                <select class="form-select form-select-sm" aria-label=".form-select-sm example" id="selectDuration" asp-for="DurationInMinutes">
                                    <option value="60">60 min</option>
                                    <option value="90">90 min</option>
                                </select>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-md-4 card-text" style="text-align: right">
                                Participants limit
                            </div>
                            <div class="col-md-8">
                                <input class="form-control" type="text" placeholder="Count of people" aria-label="default input example" asp-for="ParticipantsLimit">
                                <span asp-validation-for="ParticipantsLimit" class="card-text small"></span>
                            </div>

                        </div>
                        <br />

                        <div class="row">
                            <div class="col-md-4 card-text" style="text-align: right">
                                Duplicate for a month*
                                <br />
                                <br />
                                <span style="font-size: smaller; font-style: italic">
                                    *group classes will be scheduled on selected days of the week
                                    and at selected times for the next 30 days from the selected date.
                                </span>
                            </div>
                            <div class="col-md-8">
                                @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
                                {
                                <div class="form-check" style="text-align: left">
                                    @if (Model.WorkDaysOfWeek.Contains((DayOfWeek)day))
                                    {
                                        if (Model.SelectedDaysOfWeek != null && Model.SelectedDaysOfWeek.Contains((DayOfWeek)day))
                                        {
                                            <input class="form-check-input" type="checkbox" name=SelectedDaysOfWeek value="@day" id="@day.ToString()" checked="checked">
                                        }
                                        else
                                        {
                                            <input class="form-check-input" type="checkbox" name=SelectedDaysOfWeek value="@day" id="@day.ToString()">
                                        }
                                    }
                                    else
                                    {
                                        <input class="form-check-input" type="checkbox" name=SelectedDaysOfWeek value="" id="@day.ToString()" disabled>
                                    }
                                    <label class="form-check-label" for="@day.ToString()">
                                        @day.ToString()
                                    </label>
                                </div>
                                }
                                <div id="daysOfWeekErrorMessage" style="font-size: small; color: red"></div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <a asp-controller="Schedule" asp-action="Index" class="btn btn-outline-secondary" style="width: 20%">Cancel</a>
                        <input type="submit" value="Ok" class="btn btn-dark" style="width: 20%" />
                    </div>
                </form>
            </div>
        </div>
        <div class=" col-md-2">

        </div>
    </div>
</div>


<script>
    document.getElementById("selectDate").addEventListener("change",
        function (e) {
            var selectedDate = document.getElementById("selectDate").value;
            var trainerId = document.getElementById("trainerId").value;
            $.post(`https://localhost:44384/api/getavailabletime`,
                {
                    trainerId: trainerId,
                    selectedDate: selectedDate
                })
                .done(function (data) {
                    if (data.length !== 0) {
                        var html = '';
                        for (var i = 0; i < data.length; i++) {
                            if (i === 0) {
                                html += "<option selected value=" + data[i] + ">" + data[i] + "</option>";
                            }
                            html += "<option value=" + data[i] + ">" + data[i] + "</option>";
                        }
                        document.getElementById("startTimeSelect").innerHTML = html;
                        document.getElementById("timeErrorMessage").innerText = "";
                    } else {
                        document.getElementById("startTimeSelect").innerHTML = '';
                        document.getElementById("timeErrorMessage").innerText = "The selected day is dayOff for a current trainer. Please, select another date";
                    }
                });
        });



    var checkboxes = document.querySelectorAll("input[type = checkbox][name = SelectedDaysOfWeek]");
    let enabledDays = [];

    checkboxes.forEach(function (checkbox) {
        checkbox.addEventListener('change', checkTimeAndDayOfWeek)
    });
    document.getElementById("startTimeSelect").addEventListener('change', checkTimeAndDayOfWeek);

    function checkTimeAndDayOfWeek(e) {
        var selectedTime = document.getElementById("startTimeSelect").value;
        if (selectedTime === "") {
            document.getElementById("timeErrorMessage").innerText = "Please, choose the time before";
        }
        else {
            enabledDays = Array.from(checkboxes).filter(i => i.checked).map(i => i.value.toString());
            var trainerId = document.getElementById("trainerId").value;
            var duration = document.getElementById("selectDuration").value;
            var selectedDate = document.getElementById("selectDate").value;

            $.post(`https://localhost:44384/api/checkselectedtimefordays`,
                {
                    trainerId: trainerId,
                    selectedTime: selectedTime,
                    selectedDate: selectedDate,
                    selectedDaysOfWeek: enabledDays,
                    duration: duration
                })
                .done(function (data) {
                    if (data === true) {
                        document.getElementById("daysOfWeekErrorMessage").innerText = "";
                    }
                    else {
                        document.getElementById("daysOfWeekErrorMessage").innerText = "Selected time doesn't available for selected days of week. Please, select other days or time.";
                    }
                });
        };

    };

</script>