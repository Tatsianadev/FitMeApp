@model FitMeApp.WEB.Contracts.ViewModels.SenderRecieverMessagesCollectionViewModel

@{
    string senderAvatarPath = "/Content/images/" + Model.SenderAvatar;
    string receiverAvatarPath = "/Content/images/" + Model.ReceiverAvatar;
}
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<style>
    div.scroll {
        width: 100%;
        height: 400px;
        overflow-x: hidden;
        overflow-y: auto;
        padding: 20px;
        margin: 0px 15px;
        padding: 0px 5px;
    }
</style>


<table class="table" style="margin: 0px">
    <thead>
        <tr>
            <th scope="col" style="width: 15%">
                <img src="@receiverAvatarPath" style="width: 80%; height: auto" />
            </th>
            <th scope="col" style="width: 70%">
                <div>
                    @Model.ReceiverFirstName @Model.ReceiverLastName
                </div>
            </th>
            <th scope="col" style="width: 15%">
                <img src="@senderAvatarPath" style="width: 80%; height: auto" />
            </th>
        </tr>
    </thead>
</table>
<div class="scroll" id="messagesWindowScroll">
    <table class="table" id="messagesWindow">
        <thead>
        <tr>
            <th scope="col" style="width: 15%; height: 0"></th>
            <th scope="col" style="width: 70%; height: 0"></th>
            <th scope="col" style="width: 15%; height: 0"></th>
        </tr>
        </thead>
        <tbody>
            @foreach (var message in Model.Messages)
            {
                if (message.SenderId == Model.ReceiverId)
                {
                    <tr>
                        <th style="background-color: lightsteelblue">
                            <div>
                                @Model.ReceiverFirstName
                            </div>
                        </th>
                        <td style="background-color: lightsteelblue">
                            <div style="font-size: 11pt;">
                                <div style="font-size: 100%; text-align: left"> @message.Message</div>
                                <div style="font-size: 60%; color: gray; text-align: left">@message.Date</div>
                            </div>
                        </td>
                        <td></td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td></td>
                        <td style="background-color: bisque">
                            <div style="font-size: 11pt; background-color: bisque">
                                <div style="font-size: 100%; text-align: right"> @message.Message</div>
                                <div style="font-size: 60%; color: gray; text-align: right">@message.Date</div>
                            </div>
                        </td>
                        <th style="background-color: bisque">
                            <div>
                                @Model.SenderFirstName
                            </div>
                        </th>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div id="messageBlock" style="text-align: right; margin: 10px">
    <input type="hidden" id="receiverId" value="@Model.ReceiverId" />
    <input type="hidden" id="senderId" value="@Model.SenderId" />
    <input  id="message" type="text" class="form-control form-control-lg"  placeholder="type your message" >
    <br/>
    <input type="button" id="sendBtn" value="Send" class="btn btn-dark btn-sm" style=""/>
</div>
<script>
    var messagesWindowScroll = document.getElementById("messagesWindowScroll");  /*to keep focus in scrollPanel at the bottom*/ 
    messagesWindowScroll.scrollTop = messagesWindowScroll.scrollHeight;

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .configureLogging(signalR.LogLevel.Information)
        .build();


    try {
        hubConnection.on("Get",
            function (messageId) {

                var url = "@Url.Action("ShowNewMessageInChat", "ChatRoom")";

                $.ajax({
                    type: "Get",
                    url: url,
                    data: { messageId: messageId },
                    success: function (result) {
                        $('#messagesWindow tr:last').after(result);
                        $('#message').val('');
                        messagesWindowScroll.scrollTop = messagesWindowScroll.scrollHeight; /*to keep focus in scrollPanel on the last added message*/
                    }
                });
            });
    }
    catch (ex) {
        console.error(ex);
    }


    try {
        document.getElementById("sendBtn").addEventListener("click",
            function (e) {
                let message = document.getElementById("message").value;
                let receiverId = document.getElementById("receiverId").value;
                let senderId = document.getElementById("senderId").value;
                hubConnection.invoke("Send", message, receiverId, senderId);
            });

        document.getElementById("message").addEventListener("keypress",
            function (e) {
                if (e.key === "Enter") {
                    document.getElementById("sendBtn").click();
                }
            });
    } catch (ex) {
        console.error(ex);
    }


    document.onload(hubConnection.start());
</script>




